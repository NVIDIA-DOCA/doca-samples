#
# Copyright (c) 2025 NVIDIA CORPORATION AND AFFILIATES.  All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification, are permitted
# provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright notice, this list of
#       conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright notice, this list of
#       conditions and the following disclaimer in the documentation and/or other materials
#       provided with the distribution.
#     * Neither the name of the NVIDIA CORPORATION nor the names of its contributors may be used
#       to endorse or promote products derived from this software without specific prior written
#       permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
# FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL NVIDIA CORPORATION BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TOR (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

number_of_ports: 2
min_supported_nic:
  - ConnectX-7
mode_args:
  - switch
ports_description:
  port_0: doca_dev
  port_1: doca_rep_dev
description: "This sample is based on the Flow CT UDP sample. The sample illustrates that a hardware entry can be created
              with a single match (matching performed in one direction only) in the API call doca_flow_ct_add_entry().
              Sample Command Line: ./build/doca_flow_ct_udp_single_match -- -l 60 -r pci/08:00.0,pf0vf0"
use_cases:
  - name: "Flow ct udp single match use case #1"
    args: ""
    stages:
      - name: "Sending packets iteration 1"
        packets_to_send:
          - receiving_port: 0
            packets:
              - Ether()/IP()/TCP()/Raw(load=b'Sent to port 0, dropped')
              - Ether()/IP(src="2.2.2.2", dst="1.1.1.1")/UDP(sport=1,dport=2)/Raw(load=b'Sent to port 0, origin direction, forwarded to RSS')
        validation:
          - type: dump
            expected_text:
              - "Sample received 1 packets"
      - name: "Sending packets iteration 2"
        packets_to_send:
          - receiving_port: 0
            packets:
              - Ether()/IP(src="2.2.2.2", dst="1.1.1.1")/UDP(sport=1,dport=2)/Raw(load=b'Sent to port 0, origin direction, forwarded from port 0')
              - Ether()/IP(src="1.1.1.1", dst="2.2.2.2")/UDP(sport=2,dport=1)/Raw(load=b'Sent to port 0, reply direction, dropped')
        validation:
          - type: packet
            expected_packets:
              - forwarding_port: 0
                packets:
                  - Ether(dst='11:22:33:44:55:66', src='aa:bb:cc:dd:ee:ff')/IP(id=0, src='11.21.31.41', dst='81.81.81.81', ttl=17)/UDP(chksum=0, sport=0, dport=4789)/VXLAN(flags=8, vni=11382189)/Ether()/IP(src="2.2.2.2", dst="1.1.1.1")/UDP(sport=1,dport=2)/Raw(load=b'Sent to port 0, origin direction, forwarded from port 0')
